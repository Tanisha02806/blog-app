
## üß± **BLOG APP BACKEND DEVELOPMENT CHECKLIST**

### **üü© STAGE 1 ‚Äî Project Setup**

| Task                                                                            | Status |
| ------------------------------------------------------------------------------- | ------ |
| Initialize `npm` project (`npm init -y`)                                        | ‚úÖ      |
| Install dependencies (`express`, `mongoose`, `dotenv`, `cors`, `nodemon`, etc.) | ‚úÖ      |
| Setup `package.json` scripts (`"dev": "nodemon server.js"`)                     | ‚úÖ      |
| Create `server.js` and basic Express server                                     | ‚úÖ      |
| Add `.env` file for secrets (MongoDB URL + JWT secret)                          | ‚úÖ      |
| Load environment variables using `dotenv`                                       | ‚úÖ      |
| Connect MongoDB with `mongoose`                                                 | ‚úÖ      |
| Fix ES module/CommonJS compatibility issues                                     | ‚úÖ      |
| Server running successfully on port 5000                                        | ‚úÖ      |

---

### **üü® STAGE 2 ‚Äî Folder Structure & Routes**

| Task                                                            | Status                     |
| --------------------------------------------------------------- | -------------------------- |
| Create `routes` folder                                          | ‚úÖ                          |
| Setup base routes (`/api/users`, `/api/posts`, `/api/comments`) | ‚ö†Ô∏è *`comments.js` missing* |
| Import routes into `server.js`                                  | ‚úÖ (except comments route)  |
| Test routes with Postman                                        | ‚¨ú Pending                  |

---

### **üü® STAGE 3 ‚Äî Models (MongoDB Schemas)**

| Task                       | Status    |
| -------------------------- | --------- |
| Create `models/User.js`    | ‚¨ú Pending |
| Create `models/Post.js`    | ‚¨ú Pending |
| Create `models/Comment.js` | ‚¨ú Pending |
| Test schema connections    | ‚¨ú Pending |

---

### **üü® STAGE 4 ‚Äî Controllers (Logic Layer)**

| Task                                     | Status    |
| ---------------------------------------- | --------- |
| Setup `controllers/userController.js`    | ‚¨ú Pending |
| Setup `controllers/postController.js`    | ‚¨ú Pending |
| Setup `controllers/commentController.js` | ‚¨ú Pending |

---

### **üü® STAGE 5 ‚Äî Authentication**

| Task                                                  | Status    |
| ----------------------------------------------------- | --------- |
| Add `bcrypt` for password hashing                     | ‚¨ú Pending |
| Add `jsonwebtoken` for JWT-based login                | ‚¨ú Pending |
| Create register/login routes                          | ‚¨ú Pending |
| Protect routes using middleware (`authMiddleware.js`) | ‚¨ú Pending |

---

### **üü® STAGE 6 ‚Äî Blog CRUD Operations**

| Task                       | Status    |
| -------------------------- | --------- |
| Create Post (Add new blog) | ‚¨ú Pending |
| Get all posts              | ‚¨ú Pending |
| Get single post            | ‚¨ú Pending |
| Update post                | ‚¨ú Pending |
| Delete post                | ‚¨ú Pending |
| Add Comments functionality | ‚¨ú Pending |

---

### **üü® STAGE 7 ‚Äî Deployment & Optimization**

| Task                                             | Status    |
| ------------------------------------------------ | --------- |
| Setup environment for deployment (Render/Vercel) | ‚¨ú Pending |
| Add production-ready MongoDB Atlas URI           | ‚¨ú Pending |
| Test deployed API endpoints                      | ‚¨ú Pending |

---

‚úÖ **COMPLETED:**

* Server setup
* MongoDB connection
* Environment setup
* Nodemon & dotenv integration

‚ö†Ô∏è **REMAINING:**

* Add missing `routes/comments.js`
* Create Models + Controllers
* Implement Authentication (JWT, bcrypt)
* CRUD for Posts & Comments
* Deployment
